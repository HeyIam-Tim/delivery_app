# Generated by Django 3.2.10 on 2024-05-01 09:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        # ('core', '0009_auto_20240501_1434'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Добавлен')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Изменен')),
                ('delivery_point_type', models.PositiveSmallIntegerField(choices=[(0, 'NONE'), (1, 'CDEK'), (2, 'YANDEX')], default=0, verbose_name='Тип пункта выдачи')),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Код пункта выдачи')),
                ('uuid', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Идентификатор пункта выдачи')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Наименование')),
                ('address_comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание местоположения')),
                ('nearest_station', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ближайшая станция/остановка транспорта')),
                ('work_time', models.CharField(blank=True, max_length=100, null=True, verbose_name='Режим работы')),
                ('phones', models.CharField(blank=True, max_length=255, null=True, verbose_name='Телефоны')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес электронной почты')),
                ('type', models.CharField(blank=True, max_length=8, null=True, verbose_name='Тип ПВЗ: PVZ — склад СДЭК, POSTAMAT — постамат СДЭК')),
                ('owner_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Принадлежность офиса компании')),
                ('take_only', models.BooleanField(blank=True, default=False, null=True, verbose_name='Является ли офис только пунктом выдачи или также осуществляет приём грузов')),
                ('is_handout', models.BooleanField(blank=True, default=False, null=True, verbose_name='Является пунктом выдачи')),
                ('is_reception', models.BooleanField(blank=True, default=False, null=True, verbose_name='Является пунктом приёма')),
                ('is_ltl', models.BooleanField(blank=True, default=False, null=True, verbose_name='Работает ли офис с LTL (сборный груз)')),
                ('have_cashless', models.BooleanField(blank=True, default=False, null=True, verbose_name='Есть безналичный расчет')),
                ('have_cash', models.BooleanField(blank=True, default=False, null=True, verbose_name='Есть приём наличных')),
                ('allowed_cod', models.BooleanField(blank=True, default=False, null=True, verbose_name='Разрешен наложенный платеж в ПВЗ')),
                ('weight_min', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Минимальный вес (в кг.), принимаемый в ПВЗ (> WeightMin)')),
                ('weight_max', models.FloatField(blank=True, default=30.0, null=True, verbose_name='Максимальный вес (в кг.), принимаемый в ПВЗ (<=WeightMax)')),
                ('postamat_width', models.PositiveIntegerField(blank=True, null=True, verbose_name='POSTAMAT Ширина (см)')),
                ('postamat_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='POSTAMAT Высота (см)')),
                ('postamat_depth', models.PositiveIntegerField(blank=True, null=True, verbose_name='POSTAMAT Глубина (см)')),
                ('postal_code', models.PositiveIntegerField(blank=True, null=True, verbose_name='Почтовый индекс города')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Широта')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Долгота')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес (улица, дом, офис) в указанном городе')),
                ('address_full', models.CharField(blank=True, max_length=255, null=True, verbose_name='Полный адрес с указанием страны, региона, города, и т.д.')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delivery_points', to='core.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Пункт выдачи',
                'verbose_name_plural': 'Пункты выдачи',
            },
        ),
    ]
